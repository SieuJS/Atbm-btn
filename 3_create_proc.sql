 -- LOGIN WITH SYSDBA 
SET ECHO ON ; 
ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE;  
ALTER SESSION SET CURRENT_SCHEMA = QLHS;

-- CREATE STUDENT USER PROC
CREATE OR REPLACE PROCEDURE USP_CREATE_STUDENT_USER
AS
    CURSOR CUR IS (
        SELECT STUDENT_NUMBER
        FROM STUDENT
        WHERE 'RL_QLHS_STUDENT_' || STUDENT_NUMBER NOT IN (
            SELECT USERNAME FROM ALL_USERS
            )
    );
    STRSQL VARCHAR(2000) ;
    USR NUMBER ;
    STR_ROLE VARCHAR(200);
BEGIN
    OPEN CUR;
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE' ;
    STR_ROLE :='RL_QLHS_STUDENT_' ;
    EXECUTE IMMEDIATE(STRSQL) ;
    LOOP
        FETCH CUR INTO USR ;
        EXIT WHEN CUR%NOTFOUND;

        STRSQL := 'CREATE USER ' || STR_ROLE||USR||' IDENTIFIED BY 1' ;
        EXECUTE IMMEDIATE(STRSQL);
        STRSQL := 'GRANT CONNECT TO '|| STR_ROLE||USR;
        EXECUTE IMMEDIATE(STRSQL);
    END LOOP ;
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = FALSE' ;
    EXECUTE IMMEDIATE(STRSQL) ;
    CLOSE CUR ;
END;
/

CREATE OR REPLACE NONEDITIONABLE PROCEDURE USP_CREATE_INSTRUCTOR_USER 
AS
    CURSOR CUR IS (
        SELECT INSTRUCTOR FROM SECTION 
        WHERE 'RL_QLHS_INSTRUCTOR_' || INSTRUCTOR NOT IN (SELECT USERNAME FROM ALL_USERS)
    );
    STRSQL VARCHAR(2000);
    USR VARCHAR(200) ;
    STR_ROLE VARCHAR(200) ; 
BEGIN 
    OPEN CUR ; 
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = TRUE' ; 
    STR_ROLE := 'RL_QLHS_INSTRUCTOR_' ; 
    EXECUTE IMMEDIATE (STRSQL) ; 
    LOOP 
        FETCH CUR INTO USR ; 
        EXIT WHEN CUR%NOTFOUND; 
        STRSQL := 'CREATE USER ' || STR_ROLE || USR || ' IDENTIFIED BY 1' ;
        EXECUTE IMMEDIATE (STRSQL) ; 
        STRSQL := 'GRANT CONNECT TO ' || STR_ROLE ||USR ; 
        EXECUTE IMMEDIATE (STRSQL) ; 
    END LOOP;
    STRSQL := 'ALTER SESSION SET "_ORACLE_SCRIPT" = FALSE; ' ;
    EXECUTE IMMEDIATE (STRSQL) ; 
    CLOSE CUR ;
END; 

/

-- CREATE GRANT ROLE FOR USER ; 
CREATE OR REPLACE PROCEDURE USP_GRANT_ROLE_FOR_USER 
(USER_PREFIX VARCHAR(200) , USER_ROLE VARCHAR(200))
AS 
    CURSOR CUR IS (
        SELECT USERNAME FROM ALL_USERS 
        WHERE USERNAME LIKE USER_PREFIX
    )
    STRSQL VARCHAR(2000) ; 
    USR VARCHAR2(50); 
BEGIN
    OPEN CUR ; 
    LOOP 
        FETCH CUR INTO USR ; 
        EXIT WHEN CUR%NOTFOUND; 

        STRSQL := 'GRANT ' || USER_ROLE || 'TO' || USR;
        EXECUTE IMMEDIATE (STRSQL) ; 
    END LOOP ; 
    CLOSE CUR ;
END;/
